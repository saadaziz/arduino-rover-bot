int motor_reset = 2; //digital pin 2 assigned to motor reset

void setup()
{
  pinMode(motor_reset, OUTPUT);
  
  Serial.begin(9600);

  digitalWrite(motor_reset, LOW);
  delay(50);
  digitalWrite(motor_reset, HIGH);
  delay(50);

}

void loop()
{
  motorforward();
  delay(2000);
  motorstop();

}

//subroutine motor forward
void motorforward()
{
  //left motor
  unsigned char buff1[4];
  buff1[0]=0x80; //start byte - do not change
  buff1[1]=0x00; //Device type byte
  buff1[2]=0x01; //Motor number and direction byte; motor one =00,01
  buff1[3]=0x45; //Motor speed "0 to 128" (ex 100 is 64 in hex)
  Serial.write(buff1, 4);
  
  //right motor
  unsigned char buff2[4];
  buff2[0]=0x80; //start byte - do not change
  buff2[1]=0x00; //Device type byte
  buff2[2]=0x03; //Motor number and direction byte; motor two=02,03
  buff2[3]=0x45; //Motor speed "0 to 128" (ex 100 is 64 in hex)
  Serial.write(buff2, 4);
}

//Motor all stop
void motorstop()
{
  //left motor
  unsigned char buff3[4];
  buff3[0]=0x80; //start byte - do not change
  buff3[1]=0x00; //Device type byte
  buff3[2]=0x00; //Motor number and direction byte; motor one =00,01
  buff3[3]=0x00; //Motor speed "0 to 128" (ex 100 is 64 in hex)
  Serial.write(buff3, 4);
  
  //right motor
  unsigned char buff4[4];
  buff4[0]=0x80; //start byte - do not change
  buff4[1]=0x00; //Device type byte
  buff4[2]=0x02; //Motor number and direction byte; motor two=02,03
  buff4[3]=0x00; //Motor speed "0 to 128" (ex 100 is 64 in hex)
  Serial.write(buff4, 4);
}
